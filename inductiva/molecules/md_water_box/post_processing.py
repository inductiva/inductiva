"Postprocessing steps for the MDWaterBox scenario."
import os
try:
    import nglview as nv
except ImportError:
    nv = None

from pathlib import Path
from ..utils import unwrap_trajectory

from inductiva.utils import optional_deps

TOPOLOGY_FILE = "eql.tpr"
TRAJECTORY_FILE = "trajectory.xtc"


class MDWaterBoxOutput:
    """Post process the simulation output of a MDWaterBox scenario."""

    def __init__(self, sim_output_path: Path = None):
        """Initializes a `MDWaterBoxOutput` object.

        Given a simulation output directory that contains the standard files
        generated by a MDWaterBox simulation run, this class provides methods to
        visualize the simulation outputs in a notebook interactively.

        Args:
            sim_output_path: Path to the simulation output directory."""

        self.sim_output_dir = sim_output_path

    @optional_deps.needs_molecules_extra_deps
    def render_interactive(self):
        """Render the simulation outputs in an interactive visualization."""

        topology = os.path.join(self.sim_output_dir, TOPOLOGY_FILE)
        trajectory = os.path.join(self.sim_output_dir, TRAJECTORY_FILE)

        universe = unwrap_trajectory(topology, trajectory, guess_bonds=False)
        view = nv.show_mdanalysis(universe)
        view.add_ball_and_stick("all")
        view.center()
        print("System Information:")
        print(f"Number of atoms in the system: {len(universe.atoms)}")
        print(f"Number of trajectory frames: {len(universe.trajectory)}")
        return view
