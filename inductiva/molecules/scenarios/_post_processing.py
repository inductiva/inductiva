"""Post process Gromacs simulation outputs."""
from typing import Optional

from absl import logging

import os
import MDAnalysis as mda
import nglview as nv

from uuid import UUID

from inductiva.types import Path
from inductiva.molecules.simulators import GROMACS
from inductiva.utils.templates import (TEMPLATES_PATH,
                                       replace_params_in_template)
from inductiva.tasks import fetch_task_output, get_task_info

import json

SCENARIO_TEMPLATE_DIR = os.path.join(TEMPLATES_PATH, "protein_visualization")
GROMACS_TEMPLATE_INPUT_DIR = "gromacs"


class GROMACSSimulationOutput:
    """Post process GROMACS simulation outputs."""

    def __init__(self, sim_output_path: Path = None):
        """Initializes a `SimulationOutput` object.
        
        Given a simulation output directory that contains the standard files
        generated by a GROMACS simulation run, this class provides methods to
        visualize the simulation outputs in a notebook.
        
        Args:
            sim_output_path: Path to the simulation output directory."""

        self.sim_output_dir = sim_output_path

    def render(self, pdb_file=None, trajectory_name: str = "trajectory.xtc"):
        """Visualize the simulation outputs in a notebook using NGLView.
        
        Args:
            pdb_file: Path to the PDB file to be visualized.
            trajectory_name: Name of the trajectory file to be visualized."""

        if pdb_file is None:
            for filename in os.listdir(self.sim_output_dir):
                if filename.endswith(".pdb"):
                    pdb_file = os.path.join(self.sim_output_dir, filename)

        if pdb_file is None:
            raise ValueError("No PDB file found in the output directory.")

        trajectory = os.path.join(self.sim_output_dir, trajectory_name)
        system = mda.Universe(pdb_file, trajectory)

        view = nv.show_mdanalysis(system)
        view.add_ball_and_stick(
            "all")  # Render the molecules as ball-and-stick models
        view.center()  # Center the view
        view.parameters = {
            "backgroundColor": "white"
        }  # Set the background color

        return view
