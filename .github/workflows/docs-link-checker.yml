name: Documentation Linkcheck

on:
  workflow_dispatch:

jobs:
  linkcheck:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r docs-sources/requirements.txt

      - name: Run linkcheck recursively
        run: |
          for d in docs-sources/*/ ; do
            if [ -f "$d/conf.py" ]; then
              echo "Running linkcheck for $d"
              sphinx-build -b linkcheck "$d" "build/linkcheck/$(basename "$d")"
            fi
          done

      - name: Convert linkcheck output to CSV
        run: |
          echo "Project,File,Line,Status,URL,Message" > linkcheck_summary.csv
          find build/linkcheck -type f -name output.txt | while read -r file; do
            project=$(basename "$(dirname "$file")")
            while IFS= read -r line; do
              docfile=$(echo "$line" | awk -F':' '{print $1}')
              lineno=$(echo "$line" | awk -F':' '{print $2}' | awk '{print $1}')
              status=$(echo "$line" | grep -o '\[.*\]' | tr -d '[]')
              url=$(echo "$line" | awk '{for (i=3; i<=NF; i++) if ($i ~ /^http/) {print $i; break}}')
              message=$(echo "$line" | sed -E 's/.* - //')
              echo "\"$project\",\"$docfile\",\"$lineno\",\"$status\",\"$url\",\"$message\"" >> linkcheck_summary.csv
            done < "$file"
          done

      - name: Upload CSV report
        uses: actions/upload-artifact@v3
        with:
          name: linkcheck-report
          path: linkcheck_summary.csv
